#!/bin/sh

if [ -z $1 ]; then
	echo "Require Camunda H2 dump file. Recommended commands to generate such:\n
SCRIPT TO 'h2_dump' TABLE ACT_GE_BYTEARRAY, ACT_GE_PROPERTY, ACT_HI_ACTINST, ACT_HI_ATTACHMENT, ACT_HI_CASEACTINST, ACT_HI_CASEINST, ACT_HI_COMMENT, ACT_HI_DECINST, ACT_HI_DEC_IN, ACT_HI_DEC_OUT, ACT_HI_DETAIL, ACT_HI_INCIDENT, ACT_HI_JOB_LOG, ACT_HI_OP_LOG, ACT_HI_PROCINST, ACT_HI_TASKINST, ACT_HI_VARINST, ACT_ID_GROUP, ACT_ID_INFO, ACT_ID_MEMBERSHIP, ACT_ID_USER, ACT_RE_CASE_DEF, ACT_RE_DECISION_DEF, ACT_RE_DEPLOYMENT, ACT_RE_PROCDEF, ACT_RU_AUTHORIZATION, ACT_RU_CASE_EXECUTION, ACT_RU_CASE_SENTRY_PART, ACT_RU_EVENT_SUBSCR, ACT_RU_EXECUTION, ACT_RU_EXT_TASK, ACT_RU_FILTER, ACT_RU_IDENTITYLINK, ACT_RU_INCIDENT, ACT_RU_JOB, ACT_RU_JOBDEF, ACT_RU_TASK, ACT_RU_VARIABLE;

CALL CSVWRITE ( 'act_ru_meter_log.csv', 'SELECT * FROM ACT_RU_METER_LOG');
"
	exit -1
fi

IN=$1
OUT="$1-mysql.sql"

sed -e 's/) NOCHECK;/);/g' $IN > $OUT
sed -i .bak -e 's/LONGVARBINARY/BLOB/g' $OUT
sed -i .bak -e 's/CLOB/BLOB/g' $OUT
sed -i .bak -e 's/^CREATE CACHED TABLE PUBLIC./CREATE TABLE IF NOT EXISTS /g' $OUT
sed -i .bak -e 's/^INSERT INTO PUBLIC./INSERT INTO /g' $OUT
sed -i .bak -e 's/^ALTER TABLE PUBLIC./ALTER TABLE /g' $OUT
sed -i .bak -e 's/^CREATE INDEX PUBLIC./CREATE INDEX /g' $OUT
sed -i .bak -e 's/ ON PUBLIC./ ON /g' $OUT
sed -i .bak -e 's/) REFERENCES PUBLIC./) REFERENCES /g' $OUT
sed -i .bak -e 's/CONSTRAINT PUBLIC./CONSTRAINT /g' $OUT
sed -i .bak -e 's/ SELECTIVITY [0-9]*//g' $OUT
sed -i .bak -e "1d" $OUT
sed -i .bak -e "1d" $OUT
rm $OUT.bak

echo "
DROP TABLE IF EXISTS ACT_RU_METER_LOG;
CREATE TABLE ACT_RU_METER_LOG (
  ID_ varchar(64) NOT NULL,
  NAME_ varchar(64) NOT NULL,
  REPORTER_ varchar(255) DEFAULT NULL,
  VALUE_ mediumtext,
  TIMESTAMP_ datetime NOT NULL,
  PRIMARY KEY (ID_)
);
LOAD DATA LOCAL INFILE 'act_ru_meter_log.csv' INTO TABLE ACT_RU_METER_LOG FIELDS TERMINATED BY ',' ENCLOSED BY '\"' LINES TERMINATED BY '\\\n';
" >> $OUT
